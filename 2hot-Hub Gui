-- ModernSidebarGUI with syntax-highlighted terminal
-- Local color variables for easy customization

-- ===== Colors =====
local ORANGE = Color3.fromRGB(255,165,0)
local BLUE = Color3.fromRGB(0,170,255)
local GREEN = Color3.fromRGB(120,220,120)
local GRAY = Color3.fromRGB(120,120,120)
local BACKGROUND = Color3.fromRGB(24,24,26)
local PANEL = Color3.fromRGB(36,36,40)
local TEXT = Color3.fromRGB(230,230,230)

-- ===== Services =====
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local guiParent = (gethui and gethui()) or LocalPlayer:WaitForChild("PlayerGui")

-- Remove existing GUI
if guiParent:FindFirstChild("ModernSidebarGUI") then
    guiParent:FindFirstChild("ModernSidebarGUI"):Destroy()
end

-- ===== Config =====
local CONFIG = {
    Width = 720,
    Height = 420,
    SidebarWidth = 160,
    Corner = UDim.new(0,10),
    TweenInfo = TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
}

-- ===== Helper =====
local function new(class, props)
    local obj = Instance.new(class)
    for k,v in pairs(props or {}) do
        if k == "Parent" then obj.Parent = v else obj[k]=v end
    end
    return obj
end

-- ===== ScreenGui & Main =====
local screenGui = new("ScreenGui", {Name="ModernSidebarGUI", Parent=guiParent, ResetOnSpawn=false})
local main = new("Frame", {Parent=screenGui, Size=UDim2.new(0,CONFIG.Width,0,CONFIG.Height), Position=UDim2.new(0.2,0,0.2,0), BackgroundColor3=BACKGROUND, Active=true})
new("UICorner", {Parent=main, CornerRadius=CONFIG.Corner})

-- Draggable
local dragging, dragInput, dragStart, startPos
main.InputBegan:Connect(function(input)
    if input.UserInputType==Enum.UserInputType.MouseButton1 then
        dragging=true
        dragStart=input.Position
        startPos=main.Position
        input.Changed:Connect(function()
            if input.UserInputState==Enum.UserInputState.End then dragging=false end
        end)
    end
end)
main.InputChanged:Connect(function(input) if input.UserInputType==Enum.UserInputType.MouseMovement then dragInput=input end end)
UIS.InputChanged:Connect(function(input) if dragging and input==dragInput then main.Position=UDim2.new(0,startPos.X.Offset+(input.Position.X-dragStart.X),0,startPos.Y.Offset+(input.Position.Y-dragStart.Y)) end end)

-- ===== TopBar =====
local topBar = new("Frame", {Parent=main, Size=UDim2.new(1,0,0,36), BackgroundColor3=PANEL})
new("UICorner", {Parent=topBar, CornerRadius=CONFIG.Corner})
local title = new("TextLabel", {Parent=topBar, BackgroundTransparency=1, Position=UDim2.new(0,12,0,0), Size=UDim2.new(0,240,1,0), Text="ModernSidebarGUI", Font=Enum.Font.GothamBold, TextSize=18, TextColor3=TEXT, TextXAlignment=Enum.TextXAlignment.Left})

-- Window buttons
local function createBtn(txt,offset)
 local b=new("TextButton", {Parent=topBar, Size=UDim2.new(0,28,0,28), Position=UDim2.new(1,offset,0.5,-14), BackgroundColor3=PANEL, Text=txt, Font=Enum.Font.GothamBold, TextSize=16, TextColor3=TEXT, BorderSizePixel=0})
 new("UICorner", {Parent=b, CornerRadius=UDim.new(0,6)})
 return b
end
local closeBtn = createBtn("X", -10)
local minBtn = createBtn("-", -45)
local maxBtn = createBtn("+", -80)
closeBtn.MouseButton1Click:Connect(function() screenGui:Destroy() end)

-- ===== Sidebar =====
local sidebar = new("Frame", {Parent=main, Size=UDim2.new(0,CONFIG.SidebarWidth,1, -36), Position=UDim2.new(0,0,0,36), BackgroundColor3=PANEL})
new("UICorner", {Parent=sidebar, CornerRadius=CONFIG.Corner})
local function makeTab(name,y)
 local btn=new("TextButton", {Parent=sidebar, Size=UDim2.new(1,-12,0,40), Position=UDim2.new(0,6,0,y), BackgroundTransparency=1, Text=name, Font=Enum.Font.Gotham, TextSize=15, TextColor3=TEXT})
 return btn
end
local homeBtn=makeTab("Home",12)
local settingsBtn=makeTab("Settings",62)
local terminalBtn=makeTab("Terminal",112)

-- ===== Pages container =====
local pages = new("Frame", {Parent=main, Size=UDim2.new(1,-CONFIG.SidebarWidth,1,-36), Position=UDim2.new(0,CONFIG.SidebarWidth,0,36), BackgroundTransparency=1})

-- Pages
local homePage = new("Frame", {Parent=pages, Size=UDim2.new(1,0,1,0), BackgroundTransparency=1, Visible=true})
new("TextLabel", {Parent=homePage, Size=UDim2.new(1,-20,0,50), Position=UDim2.new(0,10,0,10), BackgroundTransparency=1, Text="üè† Home", Font=Enum.Font.GothamBold, TextSize=20, TextColor3=TEXT})

local settingsPage = new("Frame", {Parent=pages, Size=UDim2.new(1,0,1,0), BackgroundTransparency=1, Visible=false})
new("TextLabel", {Parent=settingsPage, Size=UDim2.new(1,-20,0,50), Position=UDim2.new(0,10,0,10), BackgroundTransparency=1, Text="‚öô Settings", Font=Enum.Font.GothamBold, TextSize=20, TextColor3=TEXT})

-- ===== Terminal page =====
local terminalPage = new("Frame", {Parent=pages, Size=UDim2.new(1,0,1,0), BackgroundTransparency=1, Visible=false})

local editorScroll = new("ScrollingFrame", {Parent=terminalPage, Size=UDim2.new(1,-20,1,-60), Position=UDim2.new(0,10,0,10), BackgroundTransparency=1, ScrollBarThickness=8, CanvasSize=UDim2.new(0,0,0,0), ClipsDescendants=true})
local codeBox = new("TextBox", {Parent=editorScroll, Size=UDim2.new(1,0,1,0), BackgroundTransparency=1, Text=" ", Font=Enum.Font.Code, TextSize=14, TextColor3=TEXT, TextWrapped=false, ClearTextOnFocus=false, MultiLine=true, TextXAlignment=Enum.TextXAlignment.Left, TextYAlignment=Enum.TextYAlignment.Top})

-- ===== Syntax Highlighting =====
local highlightLabel = new("TextLabel", {Parent=editorScroll, Size=UDim2.new(1,0,1,0), Position=UDim2.new(0,0,0,0), BackgroundTransparency=1, Font=Enum.Font.Code, TextSize=14, TextColor3=TEXT, TextWrapped=false, RichText=true})

-- Colors for syntax
local COLOR_KEYWORD=BLUE
local COLOR_STRING=ORANGE
local COLOR_NUMBER=GREEN
local COLOR_FUNCTION=GREEN
local COLOR_COMMENT=GRAY
local keywords={"and","break","do","else","elseif","end","false","for","function","if","in","local","nil","not","or","repeat","return","then","true","until","while"}

-- Tokenizer for "''", """, (), {}, [] together
local function colorizeToken(token)
 if token:match("^%-%-") then return "<font color='rgb("..COLOR_COMMENT.R*255..","..COLOR_COMMENT.G*255..","..COLOR_COMMENT.B*255..")'>"..token.."</font>" end
 if token:match('^".-"$') or token:match("^'.-'$") then return "<font color='rgb("..COLOR_STRING.R*255..","..COLOR_STRING.G*255..","..COLOR_STRING.B*255..")'>"..token.."</font>" end
 if token:match("^%d+[%d%.]*$") then return "<font color='rgb("..COLOR_NUMBER.R*255..","..COLOR_NUMBER.G*255..","..COLOR_NUMBER.B*255..")'>"..token.."</font>" end
 if token:match("^[%(%){%}%[%]%;%,%+%-%*/%%=<>~]+$") then return "<font color='rgb("..TEXT.R*255..","..TEXT.G*255..","..TEXT.B*255..")'>"..token.."</font>" end
 for _,k in pairs(keywords) do if token==k then return "<font color='rgb("..COLOR_KEYWORD.R*255..","..COLOR_KEYWORD.G*255..","..COLOR_KEYWORD.B*255..")'>"..token.."</font>" end end
 return token
end

local function highlightLine(line)
 local commentStart=line:find("%-%-")
 local before,comment=line, nil
 if commentStart then before=line:sub(1,commentStart-1) comment=line:sub(commentStart) end
 local result=""
 for token in before:gmatch("[^%s]+") do result=result..colorizeToken(token).." " end
 if comment then result=result..colorizeToken(comment) end
 return result
end

local function highlightText(text)
 local lines={}
 for line in (text.."\n"):gmatch("(.-)\n") do lines[#lines+1]=highlightLine(line) end
 return table.concat(lines,"<br/>")
end

codeBox:GetPropertyChangedSignal("Text"):Connect(function()
 highlightLabel.Text=highlightText(codeBox.Text)
 editorScroll.CanvasSize=UDim2.new(0,0,0,codeBox.TextBounds.Y+10)
end)

-- ===== Run button =====
local runBtn = new("TextButton", {Parent=terminalPage, Size=UDim2.new(0,90,0,30), Position=UDim2.new(1,-100,1,-40), BackgroundColor3=BLUE, Text="Run ‚ñ∂", Font=Enum.Font.GothamBold, TextSize=14, TextColor3=TEXT, BorderSizePixel=0})
new("UICorner", {Parent=runBtn, CornerRadius=UDim.new(0,6)})
runBtn.MouseButton1Click:Connect(function()
 local code=codeBox.Text
 if code and code:match("%S") then
 local f,err=loadstring(code)
 if f then pcall(f) else warn("Syntax error: "..tostring(err)) end
 end
end)

-- ===== Tab switching =====
homeBtn.MouseButton1Click:Connect(function() homePage.Visible=true settingsPage.Visible=false terminalPage.Visible=false end)
settingsBtn.MouseButton1Click:Connect(function() homePage.Visible=false settingsPage.Visible=true terminalPage.Visible=false end)
terminalBtn.MouseButton1Click:Connect(function() homePage.Visible=false settingsPage.Visible=false terminalPage.Visible=true end)

print("‚úÖ ModernSidebarGUI with terminal ready")
